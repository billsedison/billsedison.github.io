<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Journey of code</title>
  <subtitle>Note code, note life</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://billsedison.github.io/"/>
  <updated>2016-07-27T16:07:18.000Z</updated>
  <id>http://billsedison.github.io/</id>
  
  <author>
    <name>billsedison</name>
    <email>billsedison@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多账号git配置</title>
    <link href="http://billsedison.github.io/2016/07/27/multi-git-account/"/>
    <id>http://billsedison.github.io/2016/07/27/multi-git-account/</id>
    <published>2016-07-27T15:54:35.000Z</published>
    <updated>2016-07-27T16:07:18.000Z</updated>
    
    <content type="html">&lt;p&gt;在我们访问git服务器的时候，如果通过ssh的方式话，访问不同的服务器要使用不同的ssh-key。而有些private repository只对特定的账号开放。如果在同一台机器上需要用不同的账号访问不同的git服务器时，如何方便的进行账号配置和切换呢？&lt;/p&gt;
&lt;p&gt;这就需要亮出ssh的&lt;code&gt;config&lt;/code&gt;文件大法了。具体操作如下&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-新建git用户的ssh-key&quot;&gt;&lt;a href=&quot;#1-新建git用户的ssh-key&quot; class=&quot;headerlink&quot; title=&quot;1 新建git用户的ssh key&quot;&gt;&lt;/a&gt;1 新建git用户的ssh key&lt;/h1&gt;&lt;p&gt;ssh key要放在&lt;code&gt;~/.ssh&lt;/code&gt;目录下&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;your@email.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置名称为your_rsa，可以任意取名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Enter file &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; which to save the key (&lt;span class=&quot;regexp&quot;&gt;/home/yourname&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/.ssh/id&lt;/span&gt;_rsa): your_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-添加ssh-key至ssh-agent中&quot;&gt;&lt;a href=&quot;#2-添加ssh-key至ssh-agent中&quot; class=&quot;headerlink&quot; title=&quot;2 添加ssh key至ssh agent中&quot;&gt;&lt;/a&gt;2 添加ssh key至ssh agent中&lt;/h1&gt;&lt;p&gt;ssh默认只读取&lt;code&gt;id_rsa&lt;/code&gt;，为了让ssh能读取新建的&lt;code&gt;your_rsa&lt;/code&gt;，需要将其添加到ssh agent中&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh-add ~&lt;span class=&quot;regexp&quot;&gt;/.ssh/your&lt;/span&gt;_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果出现&lt;code&gt;Could not open a connection to your authentication agent&lt;/code&gt;的错误，就试着用以下命令：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh-agent bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh-add ~&lt;span class=&quot;regexp&quot;&gt;/.ssh/your&lt;/span&gt;_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-修改ssh-config文件&quot;&gt;&lt;a href=&quot;#3-修改ssh-config文件&quot; class=&quot;headerlink&quot; title=&quot;3 修改ssh config文件&quot;&gt;&lt;/a&gt;3 修改ssh config文件&lt;/h1&gt;&lt;p&gt;下面就要祭出让生活变得更简单的ssh &lt;code&gt;config&lt;/code&gt;文件了。&lt;br&gt;修改&lt;code&gt;~/.ssh/config&lt;/code&gt;文件，如果没有就创建一个。&lt;br&gt;我的&lt;code&gt;~/.ssh/config&lt;/code&gt;文件配置如下&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 该文件用于配置私钥对应的服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Default github user(first@mail.com)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host gitlab-billsedison &lt;span class=&quot;comment&quot;&gt;# 别名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  HostName gitlab.com &lt;span class=&quot;comment&quot;&gt;# host name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 用户名，必须为git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IdentityFile ~/.ssh/billsedison_github &lt;span class=&quot;comment&quot;&gt;# private key地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host github-billsedison&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  HostName github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  IdentityFile ~/.ssh/billsedison_gitlab&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;config&lt;/code&gt;文件好像是大小写敏感的，而且&lt;code&gt;User git&lt;/code&gt;不能省略。&lt;/p&gt;
&lt;p&gt;具体ssh &lt;code&gt;config&lt;/code&gt;的用法可以参照这篇文章&lt;a href=&quot;http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simplify your life with an ssh config file&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;4-测试&quot;&gt;&lt;a href=&quot;#4-测试&quot; class=&quot;headerlink&quot; title=&quot;4 测试&quot;&gt;&lt;/a&gt;4 测试&lt;/h1&gt;&lt;p&gt;先访问下gitlab&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T gitlab-billsedison&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Welcome &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; GitLab, billsedison!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再访问下github&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh -T github-billsedison&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hi billsedison! You&#39;ve successfully authenticated, &lt;span class=&quot;keyword&quot;&gt;but&lt;/span&gt; GitHub &lt;span class=&quot;keyword&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; provide shell access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用git命令时，可以用&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;gitlab-billsedison&lt;/span&gt;:mytest/mytest.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果使用了新账户，进行&lt;code&gt;commit&lt;/code&gt;和&lt;code&gt;push&lt;/code&gt;的时候还是要记得换下&lt;code&gt;user.name&lt;/code&gt;和&lt;code&gt;user.email&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user&lt;span class=&quot;selector-class&quot;&gt;.name&lt;/span&gt; billsedison&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user&lt;span class=&quot;selector-class&quot;&gt;.email&lt;/span&gt; billsedison@&lt;span class=&quot;number&quot;&gt;163&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在我们访问git服务器的时候，如果通过ssh的方式话，访问不同的服务器要使用不同的ssh-key。而有些private repository只对特定的账号开放。如果在同一台机器上需要用不同的账号访问不同的git服务器时，如何方便的进行账号配置和切换呢？&lt;/p&gt;
&lt;p&gt;这就需要亮出ssh的&lt;code&gt;config&lt;/code&gt;文件大法了。具体操作如下&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://billsedison.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>javascript-notes</title>
    <link href="http://billsedison.github.io/2015/09/27/javascript-notes/"/>
    <id>http://billsedison.github.io/2015/09/27/javascript-notes/</id>
    <published>2015-09-27T15:06:36.000Z</published>
    <updated>2015-09-28T14:09:22.000Z</updated>
    
    <content type="html">&lt;p&gt;Take notes from this post &lt;a href=&quot;http://benalman.com/news/2010/11/immediately-invoked-function-expression/#iife&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Immediately-Invoked Function Expression(IIFE)&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Function declaration &amp;amp; function expression&lt;br&gt;Now, whether you define a function like &lt;code&gt;function foo(){}&lt;/code&gt; or &lt;code&gt;var foo = function(){}&lt;/code&gt;, what you end up with is an identifier for a function, that you can invoke by putting parens (parentheses, ()) after it, like &lt;code&gt;foo()&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Because a function defined like so can be invoked by putting () after&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// the function name, like foo(), and because foo is just a reference to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// the function expression `function() &amp;#123; /* code */ &amp;#125;`...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ...doesn&#39;t it stand to reason that the function expression itself can&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// be invoked, just by putting () after it?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;(); &lt;span class=&quot;comment&quot;&gt;// SyntaxError: Unexpected token (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;As you can see, there’s a catch. When the parser encounters the function keyword in the global scope or inside a function, it treats it as a function declaration (statement), and not as a function expression, by default. If you don’t explicitly tell the parser to expect an expression, it sees what it thinks to be a function declaration without a name and throws a Sounters the function keyword in the global scope or inside a funct)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;functions, parens, and SyntaxErrors&lt;br&gt;Interestingly enough, if you were to specify a name for that function and put parens immediately after it, the parser would also throw a SyntaxError, but for a different reason. While parens placed after an expression indicate that the expression is a function to be invoked, parens placed after a statement are totally separate from the preceding statment, and are simply a grouping operator (used as a means to control precedence of evaluation).&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// While this function declaration is now syntactically valid, it&#39;s still&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a statement, and the following set of parens is invalid because the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// grouping operator needs to contain an expression.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;(); &lt;span class=&quot;comment&quot;&gt;// SyntaxError: Unexpected token )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Now, if you put an expression in the parens, no exception is thrown...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// but the function isn&#39;t executed either, because this:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Is really just equivalent to this, a function declaration followed by a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// completely unrelated expression:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The solution: Immediately-Invoked Function Expression (IIFE)&lt;br&gt;Fortunately, the SyntaxError ‘fix’ is simple. The most widely accepted way to tell the parser to expect a function expression is just to wrap it in parens, because in JavaScript, parens can’t contain statements. At this point, when the parser encounters the &lt;code&gt;function&lt;/code&gt; keyword, it knows to parse it as a function expression and not a function declaration.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Either of the following two patterns can be used to immediately invoke&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// a function expression, utilizing the function&#39;s execution context to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// create &quot;privacy.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;()); &lt;span class=&quot;comment&quot;&gt;// Crockford recommends this one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;)(); &lt;span class=&quot;comment&quot;&gt;// But this one works just as well&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Because the point of the parens or coercing operators is to disambiguate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// between function expressions and function declarations, they can be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// omitted when the parser already expects an expression (but please see the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &quot;important note&quot; below).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// If you don&#39;t care about the return value, or the possibility of making&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// your code slightly harder to read, you can save a byte by just prefixing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// the function with a unary operator.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Here&#39;s another variation, from @kuvos - I&#39;m not sure of the performance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// implications, if any, of using the `new` keyword, but it works.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// http://twitter.com/kuvos/status/18209252090847232&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* code */&lt;/span&gt; &amp;#125;() &lt;span class=&quot;comment&quot;&gt;// Only need parens if passing arguments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;First class&lt;br&gt;something is first-class if it:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;can be stored in variables and data structures&lt;/li&gt;
&lt;li&gt;can be passed as a parameter to a subroutine&lt;/li&gt;
&lt;li&gt;can be returned as the result of a subroutine&lt;/li&gt;
&lt;li&gt;can be constructed at runtime&lt;/li&gt;
&lt;li&gt;has intrinsic identity (independent of any given name)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Closure example&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;newName&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = newName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Closure&lt;br&gt;The important thing to realise is that a closure actually remembers its environment rather than its free variables, so if you define a new variable in the environment of the closure after the closure’s definition, it will be accessible inside the closure.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Take notes from this post &lt;a href=&quot;http://benalman.com/news/2010/11/immediately-invoked-function-expression/#iife&quot; target=&quot;_blank&quot; rel=&quot;e
    
    </summary>
    
      <category term="javascript" scheme="http://billsedison.github.io/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://billsedison.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>mac-vim 按上下左右出现ABCD</title>
    <link href="http://billsedison.github.io/2015/09/25/mac-vim-ABCD/"/>
    <id>http://billsedison.github.io/2015/09/25/mac-vim-ABCD/</id>
    <published>2015-09-25T14:15:39.000Z</published>
    <updated>2016-06-13T01:21:43.000Z</updated>
    
    <content type="html">&lt;p&gt;今天把hexo迁移到mac上了，写hexo blog的利器自然是vim啦。果断下载自己的vimrc，稍微改改配置就用在了mac上，各种插件和体验都很好。&lt;/p&gt;
&lt;p&gt;然而，我作为vim的非忠实粉丝，还是习惯用&lt;code&gt;up&lt;/code&gt;/&lt;code&gt;down&lt;/code&gt;/&lt;code&gt;left&lt;/code&gt;/&lt;code&gt;right&lt;/code&gt;方向键来移动光标，至于&lt;code&gt;k&lt;/code&gt;/&lt;code&gt;j&lt;/code&gt;/&lt;code&gt;h&lt;/code&gt;/&lt;code&gt;l&lt;/code&gt;是什么鬼，没听说过。然而，当我愉快地在&lt;code&gt;insert&lt;/code&gt;模式下按下方向键时，&lt;code&gt;A&lt;/code&gt;/&lt;code&gt;B&lt;/code&gt;/&lt;code&gt;C&lt;/code&gt;/&lt;code&gt;D&lt;/code&gt;跳出来了……&lt;strong&gt; 哎!Vim大哥，我不是要唱字母歌的有木有！！！ &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;于是，我开始在google大大上搜寻解决方案，其中一篇文章&lt;a href=&quot;http://vim.wikia.com/wiki/Fix_arrow_keys_that_display_A_B_C_D_on_remote_shell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fix arrow keys that display A B C D on remote shell&lt;/a&gt; 给出了21种解决方案，真是“诚意满满”，然后我开始尝试。下面给出几个有代表性的。&lt;/p&gt;
&lt;h1 id=&quot;1-改变term&quot;&gt;&lt;a href=&quot;#1-改变term&quot; class=&quot;headerlink&quot; title=&quot; 1. 改变term &quot;&gt;&lt;/a&gt;&lt;strong&gt; 1. 改变term &lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;直接输入&lt;br&gt;&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; term=&lt;span class=&quot;keyword&quot;&gt;ansi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; term=xterm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;嗯，的确解决了问题。哎，等等，我好看的vim主题去哪了，作为外貌协会的我肯定不答应！再换一个。&lt;/p&gt;
&lt;h1 id=&quot;2-用imap&quot;&gt;&lt;a href=&quot;#2-用imap&quot; class=&quot;headerlink&quot; title=&quot; 2. 用imap &quot;&gt;&lt;/a&gt;&lt;strong&gt; 2. 用imap &lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;在vimrc文件中输入以下代码&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; ^[OA &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt;ki  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; ^[OB &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt;ji  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; ^[OC &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt;li  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; ^[OD &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;hi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 注意，这里的&lt;code&gt;^[&lt;/code&gt;要通过&lt;code&gt;&amp;lt;C-v&amp;gt;&amp;lt;ESC&amp;gt;&lt;/code&gt;按出来。 &lt;/strong&gt;&lt;br&gt;嗯，的确是可以了，但是每次按完方向键，都会自动从&lt;code&gt;insert&lt;/code&gt;模式回到&lt;code&gt;normal&lt;/code&gt;模式，这也还是有点不爽。不过这个方案我还是忍了蛮久。&lt;/p&gt;
&lt;h1 id=&quot;3-好用但不知道原理的解决方案&quot;&gt;&lt;a href=&quot;#3-好用但不知道原理的解决方案&quot; class=&quot;headerlink&quot; title=&quot; 3. 好用但不知道原理的解决方案 &quot;&gt;&lt;/a&gt;&lt;strong&gt; 3. 好用但不知道原理的解决方案 &lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;最近还是发现&lt;strong&gt; 方案2 &lt;/strong&gt;不好用，但给出的解决方案都不能满足我的需求，于是我开始自己尝试。&lt;br&gt;一开始把&lt;code&gt;imap ^{OA &amp;lt;ESC&amp;gt;ki&lt;/code&gt;注释掉，发现竟然按&lt;code&gt;up&lt;/code&gt;方向键仍然在&lt;code&gt;insert&lt;/code&gt;模式，且没有字母&lt;code&gt;A&lt;/code&gt;。太棒了，然后我依次把后面几行也注释掉，并尝试，都没什么问题。但注释到最后一行的时候，&lt;code&gt;A&lt;/code&gt;/&lt;code&gt;B&lt;/code&gt;/&lt;code&gt;C&lt;/code&gt;/&lt;code&gt;D&lt;/code&gt;又跳出来了。好吧，那我试试下面的方案呢？&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;imap&lt;/span&gt; ^[OE &lt;span class=&quot;symbol&quot;&gt;&amp;lt;ESC&amp;gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;hi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里把D改成E，晕，竟然解决了我的问题，真是好用！但是，原理是啥？&lt;code&gt;imap&lt;/code&gt;的映射表现之前很奇怪，而&lt;code&gt;E&lt;/code&gt;是不存在的，反而就解决了&lt;code&gt;A&lt;/code&gt;/&lt;code&gt;B&lt;/code&gt;/&lt;code&gt;C&lt;/code&gt;/&lt;code&gt;D&lt;/code&gt;的问题…如有高人知道原因，请不吝赐教。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天把hexo迁移到mac上了，写hexo blog的利器自然是vim啦。果断下载自己的vimrc，稍微改改配置就用在了mac上，各种插件和体验都很好。&lt;/p&gt;
&lt;p&gt;然而，我作为vim的非忠实粉丝，还是习惯用&lt;code&gt;up&lt;/code&gt;/&lt;code&gt;down&lt;/code
    
    </summary>
    
      <category term="vim" scheme="http://billsedison.github.io/categories/vim/"/>
    
    
      <category term="mac vim osx" scheme="http://billsedison.github.io/tags/mac-vim-osx/"/>
    
  </entry>
  
  <entry>
    <title>hexo迁移到OS X</title>
    <link href="http://billsedison.github.io/2015/09/25/deploy-on-mac/"/>
    <id>http://billsedison.github.io/2015/09/25/deploy-on-mac/</id>
    <published>2015-09-25T07:52:00.000Z</published>
    <updated>2016-06-13T01:21:43.000Z</updated>
    
    <content type="html">&lt;p&gt;今天继续作，想到自己还有一台Macbook，当然必须是写blog利器啦，所以果断迁移到OSX上。&lt;/p&gt;
&lt;p&gt;说实话，OSX作为开发机，不知道比Windows强到哪里去了，只可惜，工作原因，还是必须在Windows上折腾。&lt;/p&gt;
&lt;p&gt;迁移到OSX上更简单，同样，新建一个自己的Workspace，然后从gitlab上clone下blog源码。&lt;br&gt;当然，在此之前，需要配好.ssh。从Windows上将ssh key文件copy到OSX的&lt;code&gt;~/.ssh&lt;/code&gt;目录。&lt;/p&gt;
&lt;p&gt;copy完成后，我很开心的执行&lt;code&gt;git clone&lt;/code&gt;，&lt;strong&gt; 然而！！ &lt;/strong&gt;，却告诉我ssh key no permission。好吧，我想起来了，Windows上Copy过来的文件默认都是&lt;code&gt;rwxrwxrwx&lt;/code&gt;格式的，而&lt;code&gt;~/.ssh&lt;/code&gt;下的key要求只有owner有rw权限，其它用户（包括root）都不能有权限，所以，必须执行以下命令&lt;/p&gt;
&lt;figure class=&quot;highlight perl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;600&lt;/span&gt; key_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，就可以开心的&lt;code&gt;git clone&lt;/code&gt;了&lt;/p&gt;
&lt;p&gt;具体的搬家方法可以参照&lt;a href=&quot;http://billsedison.github.io/2015/09/24/hexo-migration&quot;&gt;上一篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; P.S. &lt;/strong&gt;&lt;br&gt;&lt;code&gt;hexo&lt;/code&gt;竟然不能原生支持internal，所以&lt;code&gt;上一篇文章&lt;/code&gt;的超链接地址是我hardcode的。这催生了我要阅读hexo源码，学习hexo的插件机制，顺便借此熟悉下大名鼎鼎的&lt;code&gt;nodejs&lt;/code&gt;，加油！&lt;/p&gt;
&lt;p&gt;下面给出2个很好的介绍hexo源码和插件机制的文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cinvro.com/post/hexo-source-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo源码略读（一）：init.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kyfxbl.iteye.com/blog/2237538&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo插件机制分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天继续作，想到自己还有一台Macbook，当然必须是写blog利器啦，所以果断迁移到OSX上。&lt;/p&gt;
&lt;p&gt;说实话，OSX作为开发机，不知道比Windows强到哪里去了，只可惜，工作原因，还是必须在Windows上折腾。&lt;/p&gt;
&lt;p&gt;迁移到OSX上更简单，同样，新建一
    
    </summary>
    
      <category term="hexo" scheme="http://billsedison.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://billsedison.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 搬家</title>
    <link href="http://billsedison.github.io/2015/09/24/hexo-migration/"/>
    <id>http://billsedison.github.io/2015/09/24/hexo-migration/</id>
    <published>2015-09-24T06:39:27.000Z</published>
    <updated>2016-06-13T01:21:43.000Z</updated>
    
    <content type="html">&lt;p&gt;一开始hexo配置在公司电脑上，但平时在家的时候还是自己的笔记本用的比较多，所以决定在笔记本上同步一下自己的Hexo环境。&lt;/p&gt;
&lt;p&gt;笔记本上已经装好了&lt;code&gt;nodejs&lt;/code&gt;和&lt;code&gt;hexo&lt;/code&gt;，所以这点就不用再折腾了。那么，blog的源码怎么弄到笔记本呢？什么！Copy&amp;amp;Paste? 不行不行，这么low的方法怎么是我这个小码农使用的呢，还是继续git吧。&lt;/p&gt;
&lt;p&gt;github?额，虽然源码也没什么东西，但我还是想建一个private repository，毕竟自己的一亩三分地是自己私人的东西。当然，github也提供private repository，但需要money，而我这么个简单的需求的确没什么花钱的必要。所以，还是用另一个简单好用的github兄弟，gitlab。这个我之前做项目有接触过，所以，继续搞起。&lt;/p&gt;
&lt;p&gt;下面讲讲hexo搬家遇到的一些坑.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;1-git-submodule-problem&quot;&gt;&lt;a href=&quot;#1-git-submodule-problem&quot; class=&quot;headerlink&quot; title=&quot; 1. git submodule problem &quot;&gt;&lt;/a&gt;&lt;strong&gt; 1. git submodule problem &lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;hexo blog源码内部有发布版的blog网站，这个发布版的网站文件夹本身也是一个git仓库（发布到本网站的 &lt;a href=&quot;http://billsedison.github.io&quot;&gt;http://billsedison.github.io&lt;/a&gt; ），因此，在执行&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;add &lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;时，这个文件夹并不会加入到外部的仓库，这是件好事，因为将发布到github的文件夹再提交到gitlab的确多此一举。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是!!!&lt;/strong&gt; 之前下载的blog主题yilia也是从github上clone下来的，所以&lt;code&gt;themes/yilia&lt;/code&gt;也是一个git仓库，同理，也不会被&lt;code&gt;git add .&lt;/code&gt;加入到外部的仓库。但是，一开始我并不知道这件事情，所以，上传到gitlab上的blog源码的&lt;code&gt;themes/yilia&lt;/code&gt;是空的，然后在自己笔记本&lt;code&gt;clone&lt;/code&gt;下来后，本机运行是空的页面！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 解决方案 &lt;/strong&gt;&lt;br&gt;由于之前已经上传过&lt;code&gt;submodule&lt;/code&gt; &lt;code&gt;themes/yilia&lt;/code&gt;，因此需要先从git仓库中移除掉&lt;code&gt;themes/yilia&lt;/code&gt;，移除方法：&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mv themes/yilia themes/yilia_bak &lt;span class=&quot;comment&quot;&gt;# backup original yilia folder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git rm themes/yilia &lt;span class=&quot;comment&quot;&gt;# remove from git repository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git submodule deinit themes/yilia &lt;span class=&quot;comment&quot;&gt;# optional??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;rm yilia temporarily&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin &lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;# sync&lt;/span&gt; modification to gitlab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mv themes/yilia_bak themes/yilia &lt;span class=&quot;comment&quot;&gt;# revert the name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -fr themes/yilia/.git &lt;span class=&quot;comment&quot;&gt;# IMPORTANT!!! make it be never a git repository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add themes/yilia &lt;span class=&quot;comment&quot;&gt;# add it to git repository again&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;add yilia again&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin &lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;# add&lt;/span&gt; it back&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，再到本机上&lt;code&gt;git clone&lt;/code&gt;，嗯，发现东西都在了！&lt;/p&gt;
&lt;h1 id=&quot;2-node-module-problem&quot;&gt;&lt;a href=&quot;#2-node-module-problem&quot; class=&quot;headerlink&quot; title=&quot; 2. node_module problem &quot;&gt;&lt;/a&gt;&lt;strong&gt; 2. node_module problem &lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;虽然上面用的都是Linux下的命令，但我其实是work在Windows上的有木有！我自己配了一个比较好用的Windows Console，然后把大部分Linux命令都集成进来了（不是Cygwin，也不是msys，就是原生的Windows CMD），当然这是闲话……&lt;/p&gt;
&lt;p&gt;Windows有个该死的限制是，PATH的最大字符长度不能超过260，这是历史遗留问题，反正是不能通过改下面的宏实现的T_T&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; MATH_PATH 260&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而nodejs安装的本地node_module里面经常是文件夹套文件夹，所以260的余粮很快就没了，而&lt;code&gt;git add .&lt;/code&gt;也加不进超过260的路径，所以node_module文件夹是在Windows上加不到git仓库的。&lt;/p&gt;
&lt;p&gt;好吧，这其实也是好事，因为这些node_module都可以通过&lt;code&gt;npm install&lt;/code&gt;来安装，且装完一般也不会变，所以也没必要传到gitlab上。&lt;br&gt;只不过，以后如果把blog迁移到其它机器时，我得记得执行下面的命令：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;archive&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-&lt;span class=&quot;keyword&quot;&gt;category&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-tag &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-heroku &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-rsync &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-openshift &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-marked@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-stylus@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-feed@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-generator-sitemap@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-ejs &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-stylus &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-renderer-marked &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后的三行很重要，因为没有这三行，解析出来的页面是这样的……&lt;br&gt;&lt;figure class=&quot;highlight erb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/head&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/header&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; body &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (theme.sidebar &amp;amp;&amp;amp; theme.sidebar !== &lt;span class=&quot;string&quot;&gt;&#39;bottom&#39;&lt;/span&gt;)&amp;#123; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/sidebar&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &amp;#125; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/footer&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/mobile-nav&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; partial(&lt;span class=&quot;string&quot;&gt;&#39;_partial/after-footer&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;折腾完上述工作后，再运行&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;本地测试，然后，一切准备就绪~~~~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Remarks&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;那些&lt;code&gt;npm install&lt;/code&gt;我想写在一个批处理&lt;strong&gt;.bat&lt;/strong&gt;中一次执行完，但是却发现批处理中只会执行第一条&lt;code&gt;npm install&lt;/code&gt;，这是什么鬼！npm install会自动关闭cmd吗？看来，还是要用&lt;strong&gt;python&lt;/strong&gt;做批处理。&lt;/li&gt;
&lt;li&gt;在Windows下，如果需要用ssh连接git，可以在本地目录下建立一个&lt;code&gt;.ssh&lt;/code&gt;文件夹，然后里面放上如下ssh key文件，并利用&lt;code&gt;config&lt;/code&gt;文件配置好不同git使用的不同ssh key&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是，要使用本地的.ssh，需要为windows配置&lt;code&gt;HOME&lt;/code&gt;环境变量。方法如下&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; HOME=.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者一劳永逸&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;setx&lt;/span&gt; HOME=. &lt;span class=&quot;comment&quot;&gt;# 直接永久加入到User的环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，blog搬家完毕，后面慢慢note code, note life……&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一开始hexo配置在公司电脑上，但平时在家的时候还是自己的笔记本用的比较多，所以决定在笔记本上同步一下自己的Hexo环境。&lt;/p&gt;
&lt;p&gt;笔记本上已经装好了&lt;code&gt;nodejs&lt;/code&gt;和&lt;code&gt;hexo&lt;/code&gt;，所以这点就不用再折腾了。那么，blog的源码怎么弄到笔记本呢？什么！Copy&amp;amp;Paste? 不行不行，这么low的方法怎么是我这个小码农使用的呢，还是继续git吧。&lt;/p&gt;
&lt;p&gt;github?额，虽然源码也没什么东西，但我还是想建一个private repository，毕竟自己的一亩三分地是自己私人的东西。当然，github也提供private repository，但需要money，而我这么个简单的需求的确没什么花钱的必要。所以，还是用另一个简单好用的github兄弟，gitlab。这个我之前做项目有接触过，所以，继续搞起。&lt;/p&gt;
&lt;p&gt;下面讲讲hexo搬家遇到的一些坑.&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://billsedison.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://billsedison.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello, blog</title>
    <link href="http://billsedison.github.io/2015/09/23/hello_blog/"/>
    <id>http://billsedison.github.io/2015/09/23/hello_blog/</id>
    <published>2015-09-23T06:54:02.000Z</published>
    <updated>2016-06-13T01:21:43.000Z</updated>
    
    <content type="html">&lt;p&gt;在浩瀚的代码海洋中，需要有一片自己的领地，让自己可以记录生活，思考自己……&lt;/p&gt;
&lt;p&gt;虽然很久很久以前，自己也写过Blog，但是因为种种原因，还是没有坚持下来。而在这么多年的coding生涯中，发现没有了Blog，会多了很多浮躁，少了很多思考，甚至有一些很好的经验却因为没有记录而随着时间的流逝而流逝，非常可惜。&lt;/p&gt;
&lt;p&gt;甚至，没有了Blog，文字表达能力也有所退化……因此，从现在起，用自己的这一片领地，记录生活，整理自己&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;虽然，现在我对nodejs，github以及markdown还不是很熟练，但通过不断的耕耘这片领地，我相信我会慢慢熟悉起来的，加油！&lt;/p&gt;
&lt;p&gt;最后，感谢本Blog使用到的所有开源技术！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在浩瀚的代码海洋中，需要有一片自己的领地，让自己可以记录生活，思考自己……&lt;/p&gt;
&lt;p&gt;虽然很久很久以前，自己也写过Blog，但是因为种种原因，还是没有坚持下来。而在这么多年的coding生涯中，发现没有了Blog，会多了很多浮躁，少了很多思考，甚至有一些很好的经验却因为没有记录而随着时间的流逝而流逝，非常可惜。&lt;/p&gt;
&lt;p&gt;甚至，没有了Blog，文字表达能力也有所退化……因此，从现在起，用自己的这一片领地，记录生活，整理自己&lt;/p&gt;
    
    </summary>
    
      <category term="misc" scheme="http://billsedison.github.io/categories/misc/"/>
    
    
      <category term="杂项" scheme="http://billsedison.github.io/tags/%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
</feed>
